trigger:
  branches:
    exclude:
      - 'test'
    include:
      - '*'

pool:
  vmImage: ubuntu-latest


jobs:
  - job: mockE2E
    steps:
      - script: yarn install --ignore-engines && npx playwright install
        displayName: 'Install dependencies'
      - script: yarn build
        displayName: 'Build functions'
        env:
          FPCDN: mock-warden.fpjs.sh
          INGRESS_API: mock-warden.fpjs.sh/ingress
          NODE_OPTIONS: "--max_old_space_size=16384"
          IS_RELEASE_BUILD: true

      - script: yarn build:example-website
        displayName: 'Build website'
        env:
          VITE_API_KEY: $(API_KEY)
          VITE_ENDPOINT: $(VITE_ENDPOINT)
          VITE_SCRIPT_URL_PATTERN: $(VITE_SCRIPT_URL_PATTERN)
          NODE_OPTIONS: "--max_old_space_size=16384"

      - script: |
          cd dist
          zip -r package.zip *
          mv package.zip ../
          cd ..
        displayName: 'Zip'

      - task: AzureCLI@2
        displayName: 'Deploy infrastructure'
        env:
          AZURE_STORAGE_ACCOUNT_NAME: $(AZURE_STORAGE_ACCOUNT_NAME)
          AZURE_STORAGE_CONTAINER_NAME: $(AZURE_STORAGE_CONTAINER_NAME)
          AZURE_STORAGE_RESOURCE_GROUP: $(AZURE_STORAGE_RESOURCE_GROUP)
          AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
          FPJS_PRE_SHARED_SECRET: secret
        inputs:
          azureSubscription: 'azure-proxy-integration-e2e-tests'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: 'yarn e2e-deploy-infra'

      - task: AzureCLI@2
        inputs:
          azureSubscription: 'azure-proxy-integration-e2e-tests'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: 'yarn test:mock-e2e'
        displayName: 'Run e2e tests'
        env:
          CI: 'true'
          GITHUB_TOKEN: $(GITHUB_TOKEN)

      - task: AzureCLI@2
        inputs:
          azureSubscription: 'azure-proxy-integration-e2e-tests'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: 'yarn e2e-destroy-infra'
        displayName: 'Destroy infrastructure'
        condition: always()
        env:
          AZURE_STORAGE_ACCOUNT_NAME: $(AZURE_STORAGE_ACCOUNT_NAME)
          AZURE_STORAGE_CONTAINER_NAME: $(AZURE_STORAGE_CONTAINER_NAME)
          AZURE_STORAGE_RESOURCE_GROUP: $(AZURE_STORAGE_RESOURCE_GROUP)
          AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
          FPJS_PRE_SHARED_SECRET: secret


  - job: E2E
    steps:
      - script: yarn install --ignore-engines && npx playwright install
        displayName: 'Install dependencies'
      - script: yarn build
        displayName: 'Build functions'
        env:
          FPCDN: fpcdn.io
          INGRESS_API: api.fpjs.io
          NODE_OPTIONS: "--max_old_space_size=16384"
          IS_RELEASE_BUILD: true

      - script: yarn build:example-website
        displayName: 'Build website'
        env:
          VITE_API_KEY: $(API_KEY)
          VITE_ENDPOINT: $(VITE_ENDPOINT)
          VITE_SCRIPT_URL_PATTERN: $(VITE_SCRIPT_URL_PATTERN)
          NODE_OPTIONS: "--max_old_space_size=16384"

      - script: |
          cd dist
          zip -r package.zip *
          mv package.zip ../
          cd ..
        displayName: 'Zip'

      - task: AzureCLI@2
        displayName: 'Deploy infrastructure'
        env:
          AZURE_STORAGE_ACCOUNT_NAME: $(AZURE_STORAGE_ACCOUNT_NAME)
          AZURE_STORAGE_CONTAINER_NAME: $(AZURE_STORAGE_CONTAINER_NAME)
          AZURE_STORAGE_RESOURCE_GROUP: $(AZURE_STORAGE_RESOURCE_GROUP)
          AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
          FPJS_PRE_SHARED_SECRET: $(FPJS_PRE_SHARED_SECRET)
        inputs:
          azureSubscription: 'azure-proxy-integration-e2e-tests'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: 'yarn e2e-deploy-infra'

      - task: AzureCLI@2
        inputs:
          azureSubscription: 'azure-proxy-integration-e2e-tests'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: 'yarn test:e2e'
        displayName: 'Run e2e tests'
        env:
          CI: 'true'

      - task: AzureCLI@2
        inputs:
          azureSubscription: 'azure-proxy-integration-e2e-tests'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: 'yarn e2e-destroy-infra'
        displayName: 'Destroy infrastructure'
        condition: always()
        env:
          AZURE_STORAGE_ACCOUNT_NAME: $(AZURE_STORAGE_ACCOUNT_NAME)
          AZURE_STORAGE_CONTAINER_NAME: $(AZURE_STORAGE_CONTAINER_NAME)
          AZURE_STORAGE_RESOURCE_GROUP: $(AZURE_STORAGE_RESOURCE_GROUP)
          AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
          FPJS_PRE_SHARED_SECRET: $(FPJS_PRE_SHARED_SECRET)



