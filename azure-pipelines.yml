# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
  batch: 'false'
  branches:
    include:
      - '*'

pool:
  vmImage: ubuntu-latest

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: '9ea37369-e041-4f5b-8b24-2e1bbf02694c'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az login --identity'
- script: az login --service-principal -u $(AZURE_CLIENT_ID) -p $(AZURE_SECRET) --tenant $(AZURE_TENANT_ID)
  displayName: 'Login to Azure'
  env:
    AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
    AZURE_TENANT_ID: $(AZURE_TENANT_ID)
    AZURE_SECRET: $(AZURE_SECRET)
- script: yarn install
  displayName: 'Install dependencies'
- script: yarn build && yarn build:example-website
  displayName: 'Build'
  env:
    VITE_API_KEY: $(API_KEY)
    VITE_ENDPOINT: $(VITE_ENDPOINT)
    VITE_SCRIPT_URL_PATTERN: $(VITE_SCRIPT_URL_PATTERN)
    FPCDN: fpcdn.io
    INGRESS_API: api.fpjs.io
    NODE_OPTIONS: "--max_old_space_size=4096"

- script: |
    cd dist
    zip -r package.zip *
    mv package.zip ../
    cd ..
  displayName: 'Zip'

- script: yarn e2e-deploy-infra
  displayName: 'Deploy infrastructure'
  env:
    AZURE_STORAGE_ACCOUNT_NAME: $(AZURE_STORAGE_ACCOUNT_NAME)
    AZURE_STORAGE_CONTAINER_NAME: $(AZURE_STORAGE_CONTAINER_NAME)
    AZURE_STORAGE_RESOURCE_GROUP: $(AZURE_STORAGE_RESOURCE_GROUP)
    AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
    FPJS_PRE_SHARED_SECRET: $(FPJS_PRE_SHARED_SECRET)

- script: yarn test:e2e
  displayName: 'Run e2e tests'
  env:
    CI: 'true'

- script: yarn e2e-destroy-infra
  displayName: 'Destroy infrastructure'
  condition: always()
  env:
    AZURE_STORAGE_ACCOUNT_NAME: $(AZURE_STORAGE_ACCOUNT_NAME)
    AZURE_STORAGE_CONTAINER_NAME: $(AZURE_STORAGE_CONTAINER_NAME)
    AZURE_STORAGE_RESOURCE_GROUP: $(AZURE_STORAGE_RESOURCE_GROUP)
    AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
    FPJS_PRE_SHARED_SECRET: $(FPJS_PRE_SHARED_SECRET)
